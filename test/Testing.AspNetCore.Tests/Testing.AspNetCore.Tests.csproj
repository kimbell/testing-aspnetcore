<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <AnalysisMode>AllEnabledByDefault</AnalysisMode>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="..\src\appsettings.json" Link="appsettings.json" />
  </ItemGroup>

  <ItemGroup>
    <!-- Test platform -->
    <PackageReference Include="Microsoft.AspNetCore.TestHost" Version="5.0.9" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Testing" Version="5.0.9" />
    <PackageReference Include="Microsoft.Extensions.PlatformAbstractions" Version="1.1.0" />
    <PackageReference Include="Microsoft.TestPlatform.ObjectModel" Version="16.11.0" />
    <PackageReference Include="Microsoft.TestPlatform.TestHost" Version="16.11.0" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.11.0" />
    <!-- Mocking libraries-->
    <PackageReference Include="Moq" Version="4.16.1" />
    <PackageReference Include="RichardSzalay.MockHttp" Version="6.0.0" />
    <!-- Testing framework-->
    <PackageReference Include="xunit" Version="2.4.1" />
    <PackageReference Include="xunit.runner.console" Version="2.4.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\src\Testing.AspNetCore\Testing.AspNetCore.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Infrastructure\" />
    <Folder Include="External\" />
  </ItemGroup>

  <!-- Open API configuration-->
  <ItemGroup>
    <!-- This is the framework package that enables other libraries to plug into the OpenApi code generation system-->
    <PackageReference Include="Microsoft.Extensions.ApiDescription.Client" Version="5.0.9">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <!-- NSWag is one alternative for code generation-->
    <PackageReference Include="NSwag.CodeGeneration.CSharp" Version="13.13.2" />
    <PackageReference Include="NSwag.ApiDescription.Client" Version="13.13.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>

    <!--
    When consuming OpenApi documents, you have two choices: reference the project or a specific file. 
    Project reference is usefull when things are under development. It requires some setup in the project and assumes a project is available. 
    File reference is useful when the contract is stable or when referencing a system outside your control. 
    -->
    
    <!--
    <OpenApiReference Include="..\..\src\Testing.AspNetCore\wwwroot\swagger\v1\swagger.json" CodeGenerator="NSwagCSharp" OutputPath="ApiClient.cs" />
    -->
    <OpenApiProjectReference Include="..\..\src\Testing.AspNetCore\Testing.AspNetCore.csproj" CodeGenerator="NSwagCSharp" OutputPath="ApiClient.cs" />
  </ItemGroup>

  <PropertyGroup>
    <!-- Thes are settings to configure NSWag code generation. Information was derived by looking at the .nswag files use by their tooling. -->
    <OpenApiGenerateCodeOnBuild>true</OpenApiGenerateCodeOnBuild>
    <OpenApiCodeDirectory>External</OpenApiCodeDirectory>
    <OpenApiGenerateCodeOptions>$(OpenApiGenerateCodeOptions) /parameterArrayType:"System.Collections.Generic.List"</OpenApiGenerateCodeOptions>
    <OpenApiGenerateCodeOptions>$(OpenApiGenerateCodeOptions) /parameterDictionaryType:"System.Collections.Generic.Dictionary"</OpenApiGenerateCodeOptions>
    <OpenApiGenerateCodeOptions>$(OpenApiGenerateCodeOptions) /responseArrayType:"System.Collections.Generic.List"</OpenApiGenerateCodeOptions>
    <OpenApiGenerateCodeOptions>$(OpenApiGenerateCodeOptions) /responseDictionaryType:"System.Collections.Generic.Dictionary"</OpenApiGenerateCodeOptions>

    <OpenApiGenerateCodeOptions>$(OpenApiGenerateCodeOptions) /arrayType:"System.Collections.Generic.List"</OpenApiGenerateCodeOptions>
    <OpenApiGenerateCodeOptions>$(OpenApiGenerateCodeOptions) /arrayBaseType:"System.Collections.Generic.List"</OpenApiGenerateCodeOptions>
    <OpenApiGenerateCodeOptions>$(OpenApiGenerateCodeOptions) /arrayInstanceType:"System.Collections.Generic.List"</OpenApiGenerateCodeOptions>
    <OpenApiGenerateCodeOptions>$(OpenApiGenerateCodeOptions) /dictionaryBaseType:"System.Collections.Generic.Dictionary"</OpenApiGenerateCodeOptions>

    <OpenApiGenerateCodeOptions>$(OpenApiGenerateCodeOptions) /dateType:"System.DateTime"</OpenApiGenerateCodeOptions>
    <OpenApiGenerateCodeOptions>$(OpenApiGenerateCodeOptions) /dateTimeType:"System.DateTimeOffset"</OpenApiGenerateCodeOptions>
    <OpenApiGenerateCodeOptions>$(OpenApiGenerateCodeOptions) /timeType:"System.TimeSpan"</OpenApiGenerateCodeOptions>
    <OpenApiGenerateCodeOptions>$(OpenApiGenerateCodeOptions) /timeSpanType:"System.TimeSpan"</OpenApiGenerateCodeOptions>

    <OpenApiGenerateCodeOptions>$(OpenApiGenerateCodeOptions) /generateOptionalParameters:true</OpenApiGenerateCodeOptions>
    <OpenApiGenerateCodeOptions>$(OpenApiGenerateCodeOptions) /generateJsonMethods:true</OpenApiGenerateCodeOptions>
  </PropertyGroup>

</Project>
